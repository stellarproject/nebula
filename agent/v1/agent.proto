syntax = "proto3";

package io.stellarproject.agent.v1;

import weak "gogoproto/gogo.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/stellarproject/nebula/agent/v1;v1";

service Agent {
	// lifecycle
	rpc Create(CreateRequest) returns (google.protobuf.Empty);
	rpc Delete(DeleteRequest) returns (google.protobuf.Empty);
	rpc Start(StartRequest) returns (google.protobuf.Empty);
	rpc Stop(StopRequest) returns (google.protobuf.Empty);
	rpc Restart(RestartRequest) returns (google.protobuf.Empty);

	// info
	rpc Get(GetRequest) returns (GetResponse);
	rpc List(ListRequest) returns (ListResponse);

	// upgrades
	rpc Update(UpdateRequest) returns (UpdateResponse);
	rpc Rollback(RollbackRequest) returns (RollbackResponse);

	// migration
	rpc Checkpoint(CheckpointRequest) returns (CheckpointResponse);
	rpc Restore(RestoreRequest) returns (RestoreResponse);
	rpc Migrate(MigrateRequest) returns (MigrateResponse);

        // terra
        rpc Apply(ApplyRequest) returns (google.protobuf.Empty);
}

message CreateRequest {
	Container container = 1;
	bool update = 2;
}

message DeleteRequest {
	string id = 1 [(gogoproto.customname) = "ID"];;
}

message GetRequest {
	string id = 1 [(gogoproto.customname) = "ID"];;
}

message GetResponse {
	ContainerInfo container = 1;
}

message RestartRequest {
	string id = 1 [(gogoproto.customname) = "ID"];;
	uint32 signal = 2;
}

message ListRequest {

}

message ListResponse {
	repeated ContainerInfo containers = 1;
}

message ContainerInfo {
	string id = 1 [(gogoproto.customname) = "ID"];;
	string image = 2;
	string status = 3;
	string ip = 4 [(gogoproto.customname) = "IP"];;
	uint64 cpu = 5;
	double memory_usage = 6;
	double memory_limit = 7;
	uint64 pid_usage = 8;
	uint64 pid_limit = 9;
	int64 fs_size = 10;
	Container config = 11;
	repeated Snapshot snapshots = 12;
}

message Snapshot {
	string id = 1 [(gogoproto.customname) = "ID"];;
	google.protobuf.Timestamp created = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
	string previous = 3;
	int64 fs_size = 4;
}

message RollbackRequest {
	string id = 1 [(gogoproto.customname) = "ID"];;
}

message RollbackResponse {
	Container container = 1;
}

message StartRequest {
	string id = 1 [(gogoproto.customname) = "ID"];;
}

message StopRequest {
	string id = 1 [(gogoproto.customname) = "ID"];;
}

message UpdateRequest {
	Container container = 1;
}

message UpdateResponse {
	Container container = 1;
}

message CheckpointRequest {
	string id = 1 [(gogoproto.customname) = "ID"];;
	string ref = 2;
	bool live = 3;
	bool exit = 4;
}

message CheckpointResponse {

}

message RestoreRequest {
	string ref = 1;
	bool live = 2;
}

message RestoreResponse {
}

message MigrateRequest {
	string id = 1 [(gogoproto.customname) = "ID"];;
	string ref = 2;
	bool live = 3;
	bool stop = 4;
	string to = 5;
	bool delete = 6;
}

message MigrateResponse {
}

message Container {
	string id = 1 [(gogoproto.customname) = "ID"];;
	string image = 2;
	string network = 3;
	Process process = 4;
	repeated Mount mounts = 5;
	Resources resources = 6;
	GPUs gpus = 7;
	// map<string, Service> services = 8;
	map<string, Config> configs = 9;
	bool readonly = 10;
	repeated Volume volumes = 11;
}

message Volume {
	string id = 1 [(gogoproto.customname) = "ID"];;
	string destination = 2;
	bool rw = 3;
}

message Config {
	string path = 1;
	string source = 2;
	uint32 signal = 3;
	string content = 4;
}

message GPUs {
	repeated int64 devices = 1;
	repeated string capabilities = 2;
}

message Resources {
	double cpus = 1;
	int64 memory = 2;
	int64 score = 3;
	uint64 no_file = 4;
}

message Mount {
	string type = 1;
	string source = 2;
	string destination = 3;
	repeated string options = 4;
}

message Process {
	User user = 1;
	repeated string args = 2;
	repeated string env = 3;
	repeated string capabilities = 4;
}

message User {
	uint32 uid = 1;
	uint32 gid = 2;
}

message Assembly {
        string name = 1;
        string image = 2;
}

message ApplyRequest {
        repeated Assembly assemblies = 1;
}
