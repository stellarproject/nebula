syntax = "proto3";

package io.stellarproject.terra.v1;

import weak "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/stellarproject/nebula/terra/v1;v1";

service Terra {
	rpc List(ListRequest) returns (ListResponse);
	rpc Apply(ApplyRequest) returns (google.protobuf.Empty);
        rpc Nodes(NodesRequest) returns (NodesResponse);
        rpc Status(StatusRequest) returns (StatusResponse);
}

message ListRequest {}

message ListResponse {
        ManifestList manifest_list = 1;
}

message Assembly {
        string image = 1;
}

message Manifest {
	string node_id = 1 [(gogoproto.customname) = "NodeID"];
	map<string, string> labels = 2;
        repeated Assembly assemblies = 3;
}

message ManifestList {
        repeated Manifest manifests = 1;
	google.protobuf.Timestamp updated = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message ApplyRequest {
        ManifestList manifest_list = 1;
        bool force = 2;
}

message NodesRequest {}

message Node {
        string id = 1 [(gogoproto.customname) = "ID"];
        string address = 2;
        map<string, string> labels = 3;
        NodeStatus status = 4;
}

message NodesResponse {
        repeated Node nodes = 1;
}

message StatusRequest {}

message NodeStatus {
        enum Status {
                UNKNOWN = 0;
                OK = 1;
                UPDATING = 2;
                FAILURE = 3;
        }
        Status status = 1;
        string description = 2;
}

message StatusResponse {
        NodeStatus node_status = 1;
}
