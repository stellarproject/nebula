// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/stellarproject/nebula/terra/v1/terra.proto

package v1 // import "github.com/stellarproject/nebula/terra/v1"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// skipping weak import gogoproto "github.com/gogo/protobuf/gogoproto"
import types "github.com/gogo/protobuf/types"

import time "time"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type NodeStatus_Status int32

const (
	NodeStatus_UNKNOWN  NodeStatus_Status = 0
	NodeStatus_OK       NodeStatus_Status = 1
	NodeStatus_UPDATING NodeStatus_Status = 2
	NodeStatus_FAILURE  NodeStatus_Status = 3
)

var NodeStatus_Status_name = map[int32]string{
	0: "UNKNOWN",
	1: "OK",
	2: "UPDATING",
	3: "FAILURE",
}
var NodeStatus_Status_value = map[string]int32{
	"UNKNOWN":  0,
	"OK":       1,
	"UPDATING": 2,
	"FAILURE":  3,
}

func (x NodeStatus_Status) String() string {
	return proto.EnumName(NodeStatus_Status_name, int32(x))
}
func (NodeStatus_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_terra_ab115f75260aab53, []int{10, 0}
}

type ListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_terra_ab115f75260aab53, []int{0}
}
func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (dst *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(dst, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

type ListResponse struct {
	ManifestList         *ManifestList `protobuf:"bytes,1,opt,name=manifest_list,json=manifestList" json:"manifest_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_terra_ab115f75260aab53, []int{1}
}
func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (dst *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(dst, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetManifestList() *ManifestList {
	if m != nil {
		return m.ManifestList
	}
	return nil
}

type Assembly struct {
	Image                string            `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Requires             []string          `protobuf:"bytes,2,rep,name=requires" json:"requires,omitempty"`
	Parameters           map[string]string `protobuf:"bytes,3,rep,name=parameters" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Assembly) Reset()         { *m = Assembly{} }
func (m *Assembly) String() string { return proto.CompactTextString(m) }
func (*Assembly) ProtoMessage()    {}
func (*Assembly) Descriptor() ([]byte, []int) {
	return fileDescriptor_terra_ab115f75260aab53, []int{2}
}
func (m *Assembly) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Assembly.Unmarshal(m, b)
}
func (m *Assembly) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Assembly.Marshal(b, m, deterministic)
}
func (dst *Assembly) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Assembly.Merge(dst, src)
}
func (m *Assembly) XXX_Size() int {
	return xxx_messageInfo_Assembly.Size(m)
}
func (m *Assembly) XXX_DiscardUnknown() {
	xxx_messageInfo_Assembly.DiscardUnknown(m)
}

var xxx_messageInfo_Assembly proto.InternalMessageInfo

func (m *Assembly) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Assembly) GetRequires() []string {
	if m != nil {
		return m.Requires
	}
	return nil
}

func (m *Assembly) GetParameters() map[string]string {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type Manifest struct {
	NodeID               string            `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Labels               map[string]string `protobuf:"bytes,2,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Assemblies           []*Assembly       `protobuf:"bytes,3,rep,name=assemblies" json:"assemblies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Manifest) Reset()         { *m = Manifest{} }
func (m *Manifest) String() string { return proto.CompactTextString(m) }
func (*Manifest) ProtoMessage()    {}
func (*Manifest) Descriptor() ([]byte, []int) {
	return fileDescriptor_terra_ab115f75260aab53, []int{3}
}
func (m *Manifest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Manifest.Unmarshal(m, b)
}
func (m *Manifest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Manifest.Marshal(b, m, deterministic)
}
func (dst *Manifest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Manifest.Merge(dst, src)
}
func (m *Manifest) XXX_Size() int {
	return xxx_messageInfo_Manifest.Size(m)
}
func (m *Manifest) XXX_DiscardUnknown() {
	xxx_messageInfo_Manifest.DiscardUnknown(m)
}

var xxx_messageInfo_Manifest proto.InternalMessageInfo

func (m *Manifest) GetNodeID() string {
	if m != nil {
		return m.NodeID
	}
	return ""
}

func (m *Manifest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Manifest) GetAssemblies() []*Assembly {
	if m != nil {
		return m.Assemblies
	}
	return nil
}

type ManifestList struct {
	Manifests            []*Manifest `protobuf:"bytes,1,rep,name=manifests" json:"manifests,omitempty"`
	Updated              time.Time   `protobuf:"bytes,2,opt,name=updated,stdtime" json:"updated"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ManifestList) Reset()         { *m = ManifestList{} }
func (m *ManifestList) String() string { return proto.CompactTextString(m) }
func (*ManifestList) ProtoMessage()    {}
func (*ManifestList) Descriptor() ([]byte, []int) {
	return fileDescriptor_terra_ab115f75260aab53, []int{4}
}
func (m *ManifestList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ManifestList.Unmarshal(m, b)
}
func (m *ManifestList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ManifestList.Marshal(b, m, deterministic)
}
func (dst *ManifestList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManifestList.Merge(dst, src)
}
func (m *ManifestList) XXX_Size() int {
	return xxx_messageInfo_ManifestList.Size(m)
}
func (m *ManifestList) XXX_DiscardUnknown() {
	xxx_messageInfo_ManifestList.DiscardUnknown(m)
}

var xxx_messageInfo_ManifestList proto.InternalMessageInfo

func (m *ManifestList) GetManifests() []*Manifest {
	if m != nil {
		return m.Manifests
	}
	return nil
}

func (m *ManifestList) GetUpdated() time.Time {
	if m != nil {
		return m.Updated
	}
	return time.Time{}
}

type ApplyRequest struct {
	ManifestList         *ManifestList `protobuf:"bytes,1,opt,name=manifest_list,json=manifestList" json:"manifest_list,omitempty"`
	Force                bool          `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ApplyRequest) Reset()         { *m = ApplyRequest{} }
func (m *ApplyRequest) String() string { return proto.CompactTextString(m) }
func (*ApplyRequest) ProtoMessage()    {}
func (*ApplyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_terra_ab115f75260aab53, []int{5}
}
func (m *ApplyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyRequest.Unmarshal(m, b)
}
func (m *ApplyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyRequest.Marshal(b, m, deterministic)
}
func (dst *ApplyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyRequest.Merge(dst, src)
}
func (m *ApplyRequest) XXX_Size() int {
	return xxx_messageInfo_ApplyRequest.Size(m)
}
func (m *ApplyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyRequest proto.InternalMessageInfo

func (m *ApplyRequest) GetManifestList() *ManifestList {
	if m != nil {
		return m.ManifestList
	}
	return nil
}

func (m *ApplyRequest) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

type NodesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodesRequest) Reset()         { *m = NodesRequest{} }
func (m *NodesRequest) String() string { return proto.CompactTextString(m) }
func (*NodesRequest) ProtoMessage()    {}
func (*NodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_terra_ab115f75260aab53, []int{6}
}
func (m *NodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodesRequest.Unmarshal(m, b)
}
func (m *NodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodesRequest.Marshal(b, m, deterministic)
}
func (dst *NodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodesRequest.Merge(dst, src)
}
func (m *NodesRequest) XXX_Size() int {
	return xxx_messageInfo_NodesRequest.Size(m)
}
func (m *NodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodesRequest proto.InternalMessageInfo

type Node struct {
	ID                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address              string            `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Labels               map[string]string `protobuf:"bytes,3,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Status               *NodeStatus       `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_terra_ab115f75260aab53, []int{7}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (dst *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(dst, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Node) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Node) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Node) GetStatus() *NodeStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type NodesResponse struct {
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodesResponse) Reset()         { *m = NodesResponse{} }
func (m *NodesResponse) String() string { return proto.CompactTextString(m) }
func (*NodesResponse) ProtoMessage()    {}
func (*NodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_terra_ab115f75260aab53, []int{8}
}
func (m *NodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodesResponse.Unmarshal(m, b)
}
func (m *NodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodesResponse.Marshal(b, m, deterministic)
}
func (dst *NodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodesResponse.Merge(dst, src)
}
func (m *NodesResponse) XXX_Size() int {
	return xxx_messageInfo_NodesResponse.Size(m)
}
func (m *NodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodesResponse proto.InternalMessageInfo

func (m *NodesResponse) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type StatusRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusRequest) Reset()         { *m = StatusRequest{} }
func (m *StatusRequest) String() string { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()    {}
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_terra_ab115f75260aab53, []int{9}
}
func (m *StatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusRequest.Unmarshal(m, b)
}
func (m *StatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusRequest.Marshal(b, m, deterministic)
}
func (dst *StatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusRequest.Merge(dst, src)
}
func (m *StatusRequest) XXX_Size() int {
	return xxx_messageInfo_StatusRequest.Size(m)
}
func (m *StatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatusRequest proto.InternalMessageInfo

type NodeStatus struct {
	Status               NodeStatus_Status `protobuf:"varint,1,opt,name=status,proto3,enum=io.stellarproject.terra.v1.NodeStatus_Status" json:"status,omitempty"`
	Description          string            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *NodeStatus) Reset()         { *m = NodeStatus{} }
func (m *NodeStatus) String() string { return proto.CompactTextString(m) }
func (*NodeStatus) ProtoMessage()    {}
func (*NodeStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_terra_ab115f75260aab53, []int{10}
}
func (m *NodeStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeStatus.Unmarshal(m, b)
}
func (m *NodeStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeStatus.Marshal(b, m, deterministic)
}
func (dst *NodeStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeStatus.Merge(dst, src)
}
func (m *NodeStatus) XXX_Size() int {
	return xxx_messageInfo_NodeStatus.Size(m)
}
func (m *NodeStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeStatus.DiscardUnknown(m)
}

var xxx_messageInfo_NodeStatus proto.InternalMessageInfo

func (m *NodeStatus) GetStatus() NodeStatus_Status {
	if m != nil {
		return m.Status
	}
	return NodeStatus_UNKNOWN
}

func (m *NodeStatus) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type StatusResponse struct {
	NodeStatus           *NodeStatus `protobuf:"bytes,1,opt,name=node_status,json=nodeStatus" json:"node_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_terra_ab115f75260aab53, []int{11}
}
func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResponse.Unmarshal(m, b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResponse.Marshal(b, m, deterministic)
}
func (dst *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(dst, src)
}
func (m *StatusResponse) XXX_Size() int {
	return xxx_messageInfo_StatusResponse.Size(m)
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

func (m *StatusResponse) GetNodeStatus() *NodeStatus {
	if m != nil {
		return m.NodeStatus
	}
	return nil
}

type UpdateRequest struct {
	ManifestList         *ManifestList `protobuf:"bytes,1,opt,name=manifest_list,json=manifestList" json:"manifest_list,omitempty"`
	Force                bool          `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_terra_ab115f75260aab53, []int{12}
}
func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(dst, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetManifestList() *ManifestList {
	if m != nil {
		return m.ManifestList
	}
	return nil
}

func (m *UpdateRequest) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

type VersionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionRequest) Reset()         { *m = VersionRequest{} }
func (m *VersionRequest) String() string { return proto.CompactTextString(m) }
func (*VersionRequest) ProtoMessage()    {}
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_terra_ab115f75260aab53, []int{13}
}
func (m *VersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionRequest.Unmarshal(m, b)
}
func (m *VersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionRequest.Marshal(b, m, deterministic)
}
func (dst *VersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionRequest.Merge(dst, src)
}
func (m *VersionRequest) XXX_Size() int {
	return xxx_messageInfo_VersionRequest.Size(m)
}
func (m *VersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VersionRequest proto.InternalMessageInfo

type VersionResponse struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionResponse) Reset()         { *m = VersionResponse{} }
func (m *VersionResponse) String() string { return proto.CompactTextString(m) }
func (*VersionResponse) ProtoMessage()    {}
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_terra_ab115f75260aab53, []int{14}
}
func (m *VersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionResponse.Unmarshal(m, b)
}
func (m *VersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionResponse.Marshal(b, m, deterministic)
}
func (dst *VersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionResponse.Merge(dst, src)
}
func (m *VersionResponse) XXX_Size() int {
	return xxx_messageInfo_VersionResponse.Size(m)
}
func (m *VersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VersionResponse proto.InternalMessageInfo

func (m *VersionResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func init() {
	proto.RegisterType((*ListRequest)(nil), "io.stellarproject.terra.v1.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "io.stellarproject.terra.v1.ListResponse")
	proto.RegisterType((*Assembly)(nil), "io.stellarproject.terra.v1.Assembly")
	proto.RegisterMapType((map[string]string)(nil), "io.stellarproject.terra.v1.Assembly.ParametersEntry")
	proto.RegisterType((*Manifest)(nil), "io.stellarproject.terra.v1.Manifest")
	proto.RegisterMapType((map[string]string)(nil), "io.stellarproject.terra.v1.Manifest.LabelsEntry")
	proto.RegisterType((*ManifestList)(nil), "io.stellarproject.terra.v1.ManifestList")
	proto.RegisterType((*ApplyRequest)(nil), "io.stellarproject.terra.v1.ApplyRequest")
	proto.RegisterType((*NodesRequest)(nil), "io.stellarproject.terra.v1.NodesRequest")
	proto.RegisterType((*Node)(nil), "io.stellarproject.terra.v1.Node")
	proto.RegisterMapType((map[string]string)(nil), "io.stellarproject.terra.v1.Node.LabelsEntry")
	proto.RegisterType((*NodesResponse)(nil), "io.stellarproject.terra.v1.NodesResponse")
	proto.RegisterType((*StatusRequest)(nil), "io.stellarproject.terra.v1.StatusRequest")
	proto.RegisterType((*NodeStatus)(nil), "io.stellarproject.terra.v1.NodeStatus")
	proto.RegisterType((*StatusResponse)(nil), "io.stellarproject.terra.v1.StatusResponse")
	proto.RegisterType((*UpdateRequest)(nil), "io.stellarproject.terra.v1.UpdateRequest")
	proto.RegisterType((*VersionRequest)(nil), "io.stellarproject.terra.v1.VersionRequest")
	proto.RegisterType((*VersionResponse)(nil), "io.stellarproject.terra.v1.VersionResponse")
	proto.RegisterEnum("io.stellarproject.terra.v1.NodeStatus_Status", NodeStatus_Status_name, NodeStatus_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TerraClient is the client API for Terra service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TerraClient interface {
	// List is used to list manifests
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	// Apply applies a manifest directly to the node
	Apply(ctx context.Context, in *ApplyRequest, opts ...grpc.CallOption) (*types.Empty, error)
	// Nodes returns a list of nodes
	Nodes(ctx context.Context, in *NodesRequest, opts ...grpc.CallOption) (*NodesResponse, error)
	// Status returns the current node status
	Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	// Update updates the current manifest list for the cluster
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*types.Empty, error)
	// Version reports the version of terra
	Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error)
}

type terraClient struct {
	cc *grpc.ClientConn
}

func NewTerraClient(cc *grpc.ClientConn) TerraClient {
	return &terraClient{cc}
}

func (c *terraClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/io.stellarproject.terra.v1.Terra/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *terraClient) Apply(ctx context.Context, in *ApplyRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/io.stellarproject.terra.v1.Terra/Apply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *terraClient) Nodes(ctx context.Context, in *NodesRequest, opts ...grpc.CallOption) (*NodesResponse, error) {
	out := new(NodesResponse)
	err := c.cc.Invoke(ctx, "/io.stellarproject.terra.v1.Terra/Nodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *terraClient) Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/io.stellarproject.terra.v1.Terra/Status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *terraClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/io.stellarproject.terra.v1.Terra/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *terraClient) Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.cc.Invoke(ctx, "/io.stellarproject.terra.v1.Terra/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TerraServer is the server API for Terra service.
type TerraServer interface {
	// List is used to list manifests
	List(context.Context, *ListRequest) (*ListResponse, error)
	// Apply applies a manifest directly to the node
	Apply(context.Context, *ApplyRequest) (*types.Empty, error)
	// Nodes returns a list of nodes
	Nodes(context.Context, *NodesRequest) (*NodesResponse, error)
	// Status returns the current node status
	Status(context.Context, *StatusRequest) (*StatusResponse, error)
	// Update updates the current manifest list for the cluster
	Update(context.Context, *UpdateRequest) (*types.Empty, error)
	// Version reports the version of terra
	Version(context.Context, *VersionRequest) (*VersionResponse, error)
}

func RegisterTerraServer(s *grpc.Server, srv TerraServer) {
	s.RegisterService(&_Terra_serviceDesc, srv)
}

func _Terra_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TerraServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.stellarproject.terra.v1.Terra/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TerraServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Terra_Apply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TerraServer).Apply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.stellarproject.terra.v1.Terra/Apply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TerraServer).Apply(ctx, req.(*ApplyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Terra_Nodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TerraServer).Nodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.stellarproject.terra.v1.Terra/Nodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TerraServer).Nodes(ctx, req.(*NodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Terra_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TerraServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.stellarproject.terra.v1.Terra/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TerraServer).Status(ctx, req.(*StatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Terra_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TerraServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.stellarproject.terra.v1.Terra/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TerraServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Terra_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TerraServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.stellarproject.terra.v1.Terra/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TerraServer).Version(ctx, req.(*VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Terra_serviceDesc = grpc.ServiceDesc{
	ServiceName: "io.stellarproject.terra.v1.Terra",
	HandlerType: (*TerraServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Terra_List_Handler,
		},
		{
			MethodName: "Apply",
			Handler:    _Terra_Apply_Handler,
		},
		{
			MethodName: "Nodes",
			Handler:    _Terra_Nodes_Handler,
		},
		{
			MethodName: "Status",
			Handler:    _Terra_Status_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Terra_Update_Handler,
		},
		{
			MethodName: "Version",
			Handler:    _Terra_Version_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/stellarproject/nebula/terra/v1/terra.proto",
}

func init() {
	proto.RegisterFile("github.com/stellarproject/nebula/terra/v1/terra.proto", fileDescriptor_terra_ab115f75260aab53)
}

var fileDescriptor_terra_ab115f75260aab53 = []byte{
	// 843 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xdd, 0x8e, 0xdb, 0x44,
	0x14, 0x5e, 0x3b, 0x89, 0x93, 0x3d, 0x4e, 0xb2, 0xd1, 0xa8, 0xaa, 0x2c, 0x73, 0x91, 0xc8, 0x20,
	0x08, 0xb4, 0x38, 0x6c, 0xf8, 0x51, 0x01, 0x51, 0x29, 0x51, 0xc2, 0x12, 0xed, 0x36, 0xad, 0x4c,
	0x02, 0x14, 0x81, 0x56, 0x4e, 0x3c, 0x1b, 0x0c, 0xfe, 0xab, 0x67, 0x1c, 0x29, 0x6f, 0x81, 0xb8,
	0xe7, 0x19, 0x78, 0x0d, 0x6e, 0x79, 0x81, 0x45, 0xea, 0x5b, 0xc0, 0x15, 0xb2, 0x67, 0xec, 0x3a,
	0x0b, 0xeb, 0x18, 0x81, 0x7a, 0x37, 0x67, 0xe6, 0x7c, 0xe7, 0x7c, 0xe7, 0x9c, 0x6f, 0xc6, 0x86,
	0xf7, 0x37, 0x36, 0xfd, 0x2e, 0x5a, 0xe9, 0x6b, 0xdf, 0x1d, 0x10, 0x8a, 0x1d, 0xc7, 0x0c, 0x83,
	0xd0, 0xff, 0x1e, 0xaf, 0xe9, 0xc0, 0xc3, 0xab, 0xc8, 0x31, 0x07, 0x14, 0x87, 0xa1, 0x39, 0xd8,
	0x9e, 0xb2, 0x85, 0x1e, 0x84, 0x3e, 0xf5, 0x91, 0x6a, 0xfb, 0xfa, 0xbe, 0xbb, 0xce, 0x8e, 0xb7,
	0xa7, 0xea, 0x9d, 0x8d, 0xbf, 0xf1, 0x13, 0xb7, 0x41, 0xbc, 0x62, 0x08, 0xb5, 0xbb, 0xf1, 0xfd,
	0x8d, 0x83, 0x07, 0x89, 0xb5, 0x8a, 0xae, 0x06, 0xd4, 0x76, 0x31, 0xa1, 0xa6, 0x1b, 0x70, 0x87,
	0x57, 0x6e, 0x3a, 0x60, 0x37, 0xa0, 0x3b, 0x76, 0xa8, 0xb5, 0x40, 0xbe, 0xb0, 0x09, 0x35, 0xf0,
	0xb3, 0x08, 0x13, 0xaa, 0x7d, 0x0b, 0x4d, 0x66, 0x92, 0xc0, 0xf7, 0x08, 0x46, 0x8f, 0xa0, 0xe5,
	0x9a, 0x9e, 0x7d, 0x85, 0x09, 0xbd, 0x74, 0x6c, 0x42, 0x15, 0xa1, 0x27, 0xf4, 0xe5, 0x61, 0x5f,
	0xbf, 0x9d, 0xa6, 0xfe, 0x88, 0x03, 0x92, 0x40, 0x4d, 0x37, 0x67, 0x69, 0xbf, 0x09, 0xd0, 0x18,
	0x11, 0x82, 0xdd, 0x95, 0xb3, 0x43, 0x77, 0xa0, 0x66, 0xbb, 0xe6, 0x06, 0x27, 0x31, 0x8f, 0x0d,
	0x66, 0x20, 0x15, 0x1a, 0x21, 0x7e, 0x16, 0xd9, 0x21, 0x26, 0x8a, 0xd8, 0xab, 0xf4, 0x8f, 0x8d,
	0xcc, 0x46, 0x0b, 0x80, 0xc0, 0x0c, 0x4d, 0x17, 0x53, 0x1c, 0x12, 0xa5, 0xd2, 0xab, 0xf4, 0xe5,
	0xe1, 0x7b, 0x45, 0x54, 0xd2, 0x5c, 0xfa, 0x93, 0x0c, 0x36, 0xf5, 0x68, 0xb8, 0x33, 0x72, 0x71,
	0xd4, 0x4f, 0xe0, 0xe4, 0xc6, 0x31, 0xea, 0x40, 0xe5, 0x07, 0xbc, 0xe3, 0xc4, 0xe2, 0x65, 0x4c,
	0x76, 0x6b, 0x3a, 0x11, 0x56, 0x44, 0x46, 0x36, 0x31, 0x3e, 0x12, 0x1f, 0x08, 0xda, 0x9f, 0x02,
	0x34, 0xd2, 0x92, 0xd1, 0xab, 0x50, 0xf7, 0x7c, 0x0b, 0x5f, 0xda, 0x16, 0x03, 0x8f, 0xe1, 0xf9,
	0x75, 0x57, 0x9a, 0xfb, 0x16, 0x9e, 0x4d, 0x0c, 0x29, 0x3e, 0x9a, 0x59, 0xe8, 0x33, 0x90, 0x1c,
	0x73, 0x85, 0x1d, 0x56, 0xa0, 0x3c, 0x7c, 0xa7, 0x4c, 0x37, 0xf5, 0x8b, 0x04, 0xc2, 0xe8, 0x73,
	0x3c, 0x9a, 0x00, 0x98, 0xac, 0x44, 0x1b, 0xa7, 0x0d, 0x79, 0xad, 0x4c, 0x43, 0x8c, 0x1c, 0x4e,
	0xfd, 0x10, 0xe4, 0x5c, 0xf0, 0x7f, 0x55, 0xfc, 0x4f, 0x02, 0x34, 0xf3, 0xf3, 0x46, 0x63, 0x38,
	0x4e, 0x27, 0x4e, 0x14, 0xe1, 0x30, 0xa1, 0x14, 0x6c, 0xbc, 0x80, 0xa1, 0x87, 0x50, 0x8f, 0x02,
	0xcb, 0xa4, 0xd8, 0x4a, 0x12, 0xca, 0x43, 0x55, 0x67, 0x12, 0xd6, 0x53, 0x09, 0xeb, 0x8b, 0x54,
	0xe3, 0xe3, 0xc6, 0xaf, 0xd7, 0xdd, 0xa3, 0x1f, 0x7f, 0xef, 0x0a, 0x46, 0x0a, 0xd2, 0x08, 0x34,
	0x47, 0x41, 0xe0, 0xec, 0xb8, 0xa8, 0xff, 0x67, 0x11, 0xc7, 0xdd, 0xb8, 0xf2, 0xc3, 0x35, 0xeb,
	0x46, 0xc3, 0x60, 0x86, 0xd6, 0x86, 0x66, 0x3c, 0x66, 0x92, 0xde, 0xa4, 0x3f, 0x04, 0xa8, 0xc6,
	0x1b, 0xe8, 0x2e, 0x88, 0x99, 0x1a, 0xa4, 0xe7, 0xd7, 0x5d, 0x71, 0x36, 0x31, 0x44, 0xdb, 0x42,
	0x0a, 0xd4, 0x4d, 0xcb, 0x0a, 0x31, 0x21, 0xbc, 0xad, 0xa9, 0x89, 0x26, 0x99, 0x3e, 0xd8, 0x44,
	0xef, 0x17, 0x11, 0x8d, 0x73, 0xfc, 0xa3, 0x36, 0x1e, 0x82, 0x44, 0xa8, 0x49, 0x23, 0xa2, 0x54,
	0x93, 0x72, 0x5f, 0x3f, 0x14, 0xe5, 0xf3, 0xc4, 0xdb, 0xe0, 0xa8, 0xff, 0xa2, 0x8a, 0x33, 0x68,
	0xf1, 0x5e, 0xf0, 0x67, 0xe4, 0x03, 0xa8, 0xc5, 0xda, 0x4f, 0x15, 0xd1, 0x3b, 0x44, 0xc5, 0x60,
	0xee, 0xda, 0x09, 0xb4, 0x38, 0x2b, 0xde, 0xd5, 0x5f, 0x04, 0x80, 0x17, 0x5c, 0xd1, 0x34, 0xab,
	0x31, 0xe6, 0xd5, 0x1e, 0xbe, 0x5d, 0xae, 0x46, 0x7d, 0xbf, 0x54, 0xd4, 0x03, 0xd9, 0xc2, 0x64,
	0x1d, 0xda, 0x01, 0xb5, 0x7d, 0x8f, 0xd7, 0x93, 0xdf, 0xd2, 0x1e, 0x80, 0xc4, 0x53, 0xca, 0x50,
	0x5f, 0xce, 0xcf, 0xe7, 0x8f, 0xbf, 0x9c, 0x77, 0x8e, 0x90, 0x04, 0xe2, 0xe3, 0xf3, 0x8e, 0x80,
	0x9a, 0xd0, 0x58, 0x3e, 0x99, 0x8c, 0x16, 0xb3, 0xf9, 0x59, 0x47, 0x8c, 0x5d, 0x3e, 0x1d, 0xcd,
	0x2e, 0x96, 0xc6, 0xb4, 0x53, 0xd1, 0x9e, 0x42, 0x3b, 0x2d, 0x81, 0x37, 0xe3, 0x0c, 0xe4, 0xe4,
	0x8d, 0xc8, 0x31, 0x2f, 0x3f, 0x1d, 0xf0, 0xb2, 0xb5, 0x46, 0xa1, 0xb5, 0x4c, 0x24, 0xff, 0x52,
	0x85, 0xde, 0x81, 0xf6, 0x17, 0x38, 0x24, 0xb6, 0xef, 0xa5, 0x43, 0xb9, 0x07, 0x27, 0xd9, 0x0e,
	0xaf, 0x51, 0x81, 0xfa, 0x96, 0x6d, 0x71, 0xc5, 0xa4, 0xe6, 0xf0, 0xe7, 0x2a, 0xd4, 0x16, 0x71,
	0x72, 0xf4, 0x14, 0xaa, 0x49, 0x9a, 0x37, 0x8a, 0xe8, 0xe5, 0x3e, 0x4e, 0x6a, 0xff, 0xb0, 0x23,
	0x4f, 0x3f, 0x83, 0x5a, 0xf2, 0x02, 0xa0, 0x42, 0x48, 0xfe, 0x91, 0x50, 0xef, 0xfe, 0xed, 0x8d,
	0x99, 0xc6, 0x9f, 0x49, 0xf4, 0x0d, 0xd4, 0x12, 0x2d, 0x17, 0x87, 0xca, 0x5f, 0x7d, 0xf5, 0xcd,
	0x12, 0x9e, 0x9c, 0xe8, 0x65, 0xa6, 0xab, 0x42, 0xd0, 0xde, 0x25, 0x50, 0xdf, 0x2a, 0xe3, 0xca,
	0x13, 0x9c, 0x83, 0xc4, 0x34, 0x52, 0x9c, 0x60, 0x4f, 0x47, 0xb7, 0xf6, 0x62, 0x05, 0x75, 0x3e,
	0x68, 0x54, 0xc8, 0x61, 0x5f, 0x1f, 0xea, 0xbd, 0x52, 0xbe, 0x8c, 0xf0, 0x58, 0xff, 0xfa, 0x7e,
	0xe9, 0x3f, 0xa7, 0x8f, 0xb7, 0xa7, 0x5f, 0x1d, 0xad, 0xa4, 0x84, 0xe5, 0xbb, 0x7f, 0x05, 0x00,
	0x00, 0xff, 0xff, 0x1d, 0xed, 0xa3, 0x71, 0x72, 0x09, 0x00, 0x00,
}
